


ARM Macro Assembler    Page 1 


    1 00000000         ; Print.s
    2 00000000         ; Student names: Raffer Li Gerald Liu
    3 00000000         ; Last modification date: change this to the last modifi
                       cation date or look very silly
    4 00000000         ; Runs on TM4C123
    5 00000000         ; EE319K lab 7 device driver for any LCD
    6 00000000         ;
    7 00000000         ; As part of Lab 7, students need to implement these LCD
                       _OutDec and LCD_OutFix
    8 00000000         ; This driver assumes two low-level LCD functions
    9 00000000         ; SSD1306_OutChar   outputs a single 8-bit ASCII charact
                       er
   10 00000000         ; SSD1306_OutString outputs a null-terminated string 
   11 00000000         
   12 00000000                 IMPORT           SSD1306_OutChar
   13 00000000                 IMPORT           SSD1306_OutString
   14 00000000                 EXPORT           LCD_OutDec
   15 00000000                 EXPORT           LCD_OutFix
   16 00000000                 PRESERVE8
   17 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   18 00000000                 THUMB
   19 00000000         
   20 00000000         
   21 00000000         
   22 00000000         ;-----------------------LCD_OutDec----------------------
                       -
   23 00000000         ; Output a 32-bit number in unsigned decimal format
   24 00000000         ; Input: R0 (call by value) 32-bit unsigned number
   25 00000000         ; Output: none
   26 00000000         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   27 00000000 00000000 
                       N       EQU              0
   28 00000000 00000004 
                       CNT     EQU              4
   29 00000000         LCD_OutDec
   30 00000000 E92D 0FF0       PUSH{R4-R11}
   31 00000004 F1BD 0D08       SUBS             SP, #8      ; allocate space
   32 00000008 466C            MOV              R4, SP
   33 0000000A         
   34 0000000A F04F 050A       MOV              R5, #10
   35 0000000E F04F 0600       MOV              R6, #0      ; counter
   36 00000012 6066            STR              R6, [R4, #CNT]
   37 00000014 6020            STR              R0, [R4, #N] ; store original n
                                                            umber into CNT
   38 00000016         
   39 00000016         stackloop
   40 00000016 6827            LDR              R7, [R4, #N] ; load current CNT
                                                            
   41 00000018 FBB7 F8F5       UDIV             R8, R7, R5  ; R8 = CNT/10
   42 0000001C F8C4 8000       STR              R8, [R4, #N] ; store new CNT
   43 00000020 FB08 F805       MUL              R8, R8, R5  ; R8 =     R8*10
   44 00000024 EBB7 0908       SUBS             R9, R7, R8  ; R9 = CNT - R8
   45 00000028 E92D 0600       PUSH{R9,         R10}        ; push R9 onto stac
                                                            k
   46 0000002C 6866            LDR              R6, [R4, #CNT]
   47 0000002E F106 0601       ADD              R6, R6, #1
   48 00000032 6066            STR              R6, [R4, #CNT]



ARM Macro Assembler    Page 2 


   49 00000034 6827            LDR              R7, [R4, #N]
   50 00000036 2F00            CMP              R7, #0
   51 00000038 D1ED            BNE              stackloop
   52 0000003A         
   53 0000003A         printerloop
   54 0000003A E8BD 0600       POP{R9,          R10}
   55 0000003E F109 0030       ADD              R0, R9, #0x30
   56 00000042 E92D 4400       PUSH{LR,         R10}
   57 00000046 F7FF FFFE       BL               SSD1306_OutChar
   58 0000004A E8BD 4400       POP{LR,          R10}
   59 0000004E 6866            LDR              R6, [R4, #CNT]
   60 00000050 F1A6 0601       SUB              R6, R6, #1
   61 00000054 6066            STR              R6, [R4, #CNT]
   62 00000056 2E00            CMP              R6, #0
   63 00000058 D1EF            BNE              printerloop
   64 0000005A         
   65 0000005A B002            ADD              SP, #8      ; deallocate space
   66 0000005C E8BD 0FF0       POP              {R4-R11}
   67 00000060 4770            BX               LR
   68 00000062         ;* * * * * * * * End of LCD_OutDec * * * * * * * *
   69 00000062         
   70 00000062         ; -----------------------LCD _OutFix--------------------
                       --
   71 00000062         ; Output characters to LCD display in fixed-point format
                       
   72 00000062         ; unsigned decimal, resolution 0.01, range 0.00 to 9.99
   73 00000062         ; Inputs:  R0 is an unsigned 32-bit number
   74 00000062         ; Outputs: none
   75 00000062         ; E.g., R0=0,    then output "0.00 "
   76 00000062         ;       R0=3,    then output "0.03 "
   77 00000062         ;       R0=89,   then output "0.89 "
   78 00000062         ;       R0=123,  then output "1.23 "
   79 00000062         ;       R0=999,  then output "9.99 "
   80 00000062         ;       R0>999,  then output "*.** "
   81 00000062         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   82 00000062 00000000 
                       hundredth
                               EQU              0
   83 00000062 00000004 
                       tenth   EQU              4
   84 00000062 00000008 
                       ones    EQU              8
   85 00000062 0000002A 
                       asterisk
                               EQU              0x2A
   86 00000062 0000002E 
                       dot     EQU              0x2E
   87 00000062         
   88 00000062         LCD_OutFix
   89 00000062 E92D 0FF0       PUSH{R4-R11}
   90 00000066 F04F 0100       MOV              R1,#0
   91 0000006A F04F 0200       MOV              R2,#0
   92 0000006E F04F 0300       MOV              R3,#0
   93 00000072 F04F 0464       MOV              R4,#100
   94 00000076 F04F 050A       MOV              R5,#10
   95 0000007A         
   96 0000007A B084            SUB              SP, #16     ;allocating space
   97 0000007C F5B0 7F7A       CMP              R0,#1000



ARM Macro Assembler    Page 3 


   98 00000080 DA39            BGE              outRange
   99 00000082 2800            CMP              R0, #0
  100 00000084 DB37            BLT              outRange
  101 00000086         
  102 00000086 FBB0 F3F4       UDIV             R3,R0,R4
  103 0000008A 9302            STR              R3,[SP,#ones]
  104 0000008C         subtractOne
  105 0000008C 2B00            CMP              R3,#0
  106 0000008E D004            BEQ              divide10
  107 00000090 EBA0 0004       SUB              R0,R0,R4
  108 00000094 F1A3 0301       SUB              R3,R3,#1
  109 00000098 E7F8            B                subtractOne
  110 0000009A         divide10
  111 0000009A FBB0 F2F5       UDIV             R2,R0,R5
  112 0000009E 9201            STR              R2,[SP,#tenth]
  113 000000A0         subtract10
  114 000000A0 2A00            CMP              R2,#0
  115 000000A2 D004            BEQ              divide100
  116 000000A4 EBA0 0005       SUB              R0,R0,R5
  117 000000A8 F1A2 0201       SUB              R2,R2,#1
  118 000000AC E7F8            B                subtract10
  119 000000AE         divide100
  120 000000AE 9000            STR              R0,[SP,#hundredth]
  121 000000B0         
  122 000000B0         ;begin print
  123 000000B0 F89D 0008       LDRB             R0,[SP,#ones]
  124 000000B4 F100 0030       ADD              R0,#0x30
  125 000000B8 B540            PUSH             {LR, R6}
  126 000000BA F7FF FFFE       BL               SSD1306_OutChar
  127 000000BE E8BD 4040       POP              {LR, R6}
  128 000000C2 F04F 002E       MOV              R0,#dot
  129 000000C6 B540            PUSH             {LR, R6}
  130 000000C8 F7FF FFFE       BL               SSD1306_OutChar
  131 000000CC E8BD 4040       POP              {LR, R6}
  132 000000D0 F89D 0004       LDRB             R0,[SP,#tenth]
  133 000000D4 F100 0030       ADD              R0,#0x30
  134 000000D8 B540            PUSH             {LR, R6}
  135 000000DA F7FF FFFE       BL               SSD1306_OutChar
  136 000000DE E8BD 4040       POP              {LR, R6}
  137 000000E2 F89D 0000       LDRB             R0,[SP,#hundredth]
  138 000000E6 F100 0030       ADD              R0,#0x30
  139 000000EA B540            PUSH             {LR, R6}
  140 000000EC F7FF FFFE       BL               SSD1306_OutChar
  141 000000F0 E8BD 4040       POP              {LR, R6}
  142 000000F4 E01B            B                returnBack
  143 000000F6         
  144 000000F6         outRange
  145 000000F6 F04F 002A       MOV              R0,#asterisk
  146 000000FA B540            PUSH             {LR, R6}
  147 000000FC F7FF FFFE       BL               SSD1306_OutChar
  148 00000100 E8BD 4040       POP              {LR, R6}
  149 00000104 F04F 002E       MOV              R0,#dot
  150 00000108 B540            PUSH             {LR, R6}
  151 0000010A F7FF FFFE       BL               SSD1306_OutChar
  152 0000010E E8BD 4040       POP              {LR, R6}
  153 00000112 F04F 002A       MOV              R0,#asterisk
  154 00000116 B540            PUSH             {LR, R6}
  155 00000118 F7FF FFFE       BL               SSD1306_OutChar
  156 0000011C E8BD 4040       POP              {LR, R6}



ARM Macro Assembler    Page 4 


  157 00000120 F04F 002A       MOV              R0,#asterisk
  158 00000124 B540            PUSH             {LR, R6}
  159 00000126 F7FF FFFE       BL               SSD1306_OutChar
  160 0000012A E8BD 4040       POP              {LR, R6}
  161 0000012E         
  162 0000012E         returnBack
  163 0000012E B004            ADD              SP,#16      ;deallocate
  164 00000130 E8BD 0FF0       POP              {R4 - R11}
  165 00000134 4770            BX               LR
  166 00000136         
  167 00000136 00 00           ALIGN
  168 00000138         ;* * * * * * * * End of LCD_OutFix * * * * * * * *
  169 00000138         
  170 00000138                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  171 00000138                 END                          ; end of file
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4 --apcs=interw
ork --depend=.\print.d -o.\print.o -I.\RTE\_Lab10 -IC:\Users\liraf\AppData\Loca
l\Arm\Packs\ARM\CMSIS\5.7.0\CMSIS\Core\Include -IC:\Users\liraf\AppData\Local\A
rm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 --predefine="__EVAL SETA 1"
 --predefine="__UVISION_VERSION SETA 533" --predefine="_RTE_ SETA 1" --predefin
e="TM4C123GH6PM SETA 1" --predefine="_RTE_ SETA 1" --list=.\print.lst Print.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 17 in file Print.s
   Uses
      None
Comment: .text unused
LCD_OutDec 00000000

Symbol: LCD_OutDec
   Definitions
      At line 29 in file Print.s
   Uses
      At line 14 in file Print.s
Comment: LCD_OutDec used once
LCD_OutFix 00000062

Symbol: LCD_OutFix
   Definitions
      At line 88 in file Print.s
   Uses
      At line 15 in file Print.s
Comment: LCD_OutFix used once
divide10 0000009A

Symbol: divide10
   Definitions
      At line 110 in file Print.s
   Uses
      At line 106 in file Print.s
Comment: divide10 used once
divide100 000000AE

Symbol: divide100
   Definitions
      At line 119 in file Print.s
   Uses
      At line 115 in file Print.s
Comment: divide100 used once
outRange 000000F6

Symbol: outRange
   Definitions
      At line 144 in file Print.s
   Uses
      At line 98 in file Print.s
      At line 100 in file Print.s

printerloop 0000003A

Symbol: printerloop
   Definitions
      At line 53 in file Print.s
   Uses
      At line 63 in file Print.s
Comment: printerloop used once
returnBack 0000012E




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: returnBack
   Definitions
      At line 162 in file Print.s
   Uses
      At line 142 in file Print.s
Comment: returnBack used once
stackloop 00000016

Symbol: stackloop
   Definitions
      At line 39 in file Print.s
   Uses
      At line 51 in file Print.s
Comment: stackloop used once
subtract10 000000A0

Symbol: subtract10
   Definitions
      At line 113 in file Print.s
   Uses
      At line 118 in file Print.s
Comment: subtract10 used once
subtractOne 0000008C

Symbol: subtractOne
   Definitions
      At line 104 in file Print.s
   Uses
      At line 109 in file Print.s
Comment: subtractOne used once
11 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

CNT 00000004

Symbol: CNT
   Definitions
      At line 28 in file Print.s
   Uses
      At line 36 in file Print.s
      At line 46 in file Print.s
      At line 48 in file Print.s
      At line 59 in file Print.s
      At line 61 in file Print.s

N 00000000

Symbol: N
   Definitions
      At line 27 in file Print.s
   Uses
      At line 37 in file Print.s
      At line 40 in file Print.s
      At line 42 in file Print.s
      At line 49 in file Print.s

asterisk 0000002A

Symbol: asterisk
   Definitions
      At line 85 in file Print.s
   Uses
      At line 145 in file Print.s
      At line 153 in file Print.s
      At line 157 in file Print.s

dot 0000002E

Symbol: dot
   Definitions
      At line 86 in file Print.s
   Uses
      At line 128 in file Print.s
      At line 149 in file Print.s

hundredth 00000000

Symbol: hundredth
   Definitions
      At line 82 in file Print.s
   Uses
      At line 120 in file Print.s
      At line 137 in file Print.s

ones 00000008

Symbol: ones
   Definitions
      At line 84 in file Print.s
   Uses
      At line 103 in file Print.s
      At line 123 in file Print.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols


tenth 00000004

Symbol: tenth
   Definitions
      At line 83 in file Print.s
   Uses
      At line 112 in file Print.s
      At line 132 in file Print.s

7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

SSD1306_OutChar 00000000

Symbol: SSD1306_OutChar
   Definitions
      At line 12 in file Print.s
   Uses
      At line 57 in file Print.s
      At line 126 in file Print.s
      At line 130 in file Print.s
      At line 135 in file Print.s
      At line 140 in file Print.s
      At line 147 in file Print.s
      At line 151 in file Print.s
      At line 155 in file Print.s
      At line 159 in file Print.s

SSD1306_OutString 00000000

Symbol: SSD1306_OutString
   Definitions
      At line 13 in file Print.s
   Uses
      None
Comment: SSD1306_OutString unused
2 symbols
354 symbols in table
